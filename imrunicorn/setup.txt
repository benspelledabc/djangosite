windows create user
C:\Users\sveni.THERMALTAKE\PycharmProjects\IMRUnicornDjango\venv\Scripts\python.exe C:/Users/sveni.THERMALTAKE/PycharmProjects/IMRUnicornDjango/imrunicorn/manage.py createsuperuser


The nuclear option? Back up your db, for safety, then delete the migrations folder from each of your apps, and delete all rows from the django_migrations table in your db.
Now run ./manage.py makemigrations. That will create a new initial migration file for each of your apps. If you were to then try to run ./manage.py migrate it would fail because all of that schema already exists and can’t be re-created. But you do need to tell Django that everything specified in the new migrations is already accounted for, so give it the —fake argument:
./manage.py migrate —fake


>< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< ><
import sys

# build the output file to work with
# /data/django/IMRUnicorn-Django/imrunicorn/manage.py show_urls >> ~/ben-endpoints/input.file

def main(root_site=None):
    if root_site is None:
        root_site = "http://dev.benspelledabc.me"

    count = 0
    # with open('/root/ben-endpoints/input.file') as fp:
    with open('input.file') as fp:
        lines = fp.readlines()

        for line in lines:
            count += 1
            line = line.split()
            # first index of split
            line = line[0]

            # prevent admin link walking
            if 'admin/' not in line:
                # prevent paramaterized links
                if '<' not in line:
                    output = "{}{}".format(root_site, line)
                    print(output)



if __name__== "__main__":
    if len(sys.argv) > 1:
        main(sys.argv[1])
    else:
        main()

>< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< >< ><



asgiref==3.2.3
coverage==5.0.1
Django==3.0.2
django-model-utils==4.0.0
djangorestframework==3.11.0
gunicorn==20.0.4
# mysqlclient==1.4.6
# PyMySQL==0.9.3
pytz==2019.3
sqlparse==0.3.0
uWSGI==2.0.18



SET FOREIGN_KEY_CHECKS=0;

drop table `imrunicorn_loaddata`.`polls_choice`;
drop table `imrunicorn_loaddata`.`polls_poll`;
drop table `imrunicorn_loaddata`.`shooting_logbook_location`;
drop table `imrunicorn_loaddata`.`shooting_logbook_shotcollection`;
drop table `imrunicorn_loaddata`.`shooting_logbook_shotentry`;
drop table `imrunicorn_loaddata`.`announcements_whatisnew`;
drop table `imrunicorn_loaddata`.`auth_group`;
drop table `imrunicorn_loaddata`.`auth_group_permissions`;
drop table `imrunicorn_loaddata`.`auth_permission`;
drop table `imrunicorn_loaddata`.`auth_user`;
drop table `imrunicorn_loaddata`.`auth_user_groups`;
drop table `imrunicorn_loaddata`.`auth_user_user_permissions`;
drop table `imrunicorn_loaddata`.`django_admin_log`;
drop table `imrunicorn_loaddata`.`django_content_type`;
drop table `imrunicorn_loaddata`.`django_migrations`;
drop table `imrunicorn_loaddata`.`django_session`;
drop table `imrunicorn_loaddata`.`farminvite_invitelisting`;
drop table `imrunicorn_loaddata`.`loaddata_caliber`;
drop table `imrunicorn_loaddata`.`loaddata_estimateddope`;
drop table `imrunicorn_loaddata`.`loaddata_firearm`;
drop table `imrunicorn_loaddata`.`loaddata_handload`;
drop table `imrunicorn_loaddata`.`loaddata_powder`;
drop table `imrunicorn_loaddata`.`loaddata_projectile`;


# blarg

# brew install mysql-client
## mysql-client is not on the `PATH` by default
# export PATH="/usr/local/opt/mysql-client/bin:$PATH"
## openssl is not on the link path by default
# export LIBRARY_PATH="$LIBRARY_PATH:/usr/local/opt/openssl/lib/"


#!/bin/bash

echo "setting permissions for migrations..."
sudo chown -R sdavison:datausr /data/django/IMRUnicorn-Django/imrunicorn

echo "Zeroing out migrations...."
python manage.py migrate --fake announcements zero
python manage.py migrate --fake farminvite zero
python manage.py migrate --fake loaddata zero

#python manage.py showmigrations
echo "Removing migraiton files..."
find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
find . -path "*/migrations/*.pyc"  -delete

# python manage.py showmigrations

echo "making new migrations..."
python manage.py makemigrations

echo "faking initial migration to get on track..."
python manage.py migrate --fake-initial

echo "Set permissions back after migrations."
sudo chown -R jenkins:datausr /data/django/IMRUnicorn-Django/imrunicorn

echo "restarting services..."
sudo service gunicorn restart
sudo service nginx restart